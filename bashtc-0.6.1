#!/bin/bash
##
## bashtc -- a bash twitter client
##
## written by gruen
##
## Version 0.6.1
##
## find the latest script at http://bash.gmxhome.de/scripting.html
##
## you can contact me by e-mail (gruen64 AT gmx DOT de)
## or via twitter (http://twitter.com/herrgruen) in german or english
##
## you may also follow http://twitter.com/bashtc to see bashtc news
##
## bashtc is licensed under the GPL v2 http://www.gnu.org/licenses/gpl-2.0.html
## NO GUARANTEE - USE AT YOUR OWN RISK!

## ================================================================================================
## settings & requirements
## ================================================================================================
## bashtc needs pgrep, sed, awk, curl, mpg123/ogg123, getopt/r-cran-getopt, elinks and lynx
## please set $BROWSER and $EDITOR in your ~/.bashrc and make the script executable with
## 'chmod 0700 bashtc'
## if you are a nano user - like i am - you may set your $EDITOR variable to
## export EDITOR="nano -c" in your ~/.bashrc
## this will start nano with character counting option!

## text width (number of characters)
TEXT_WIDTH=180

## connection timeout (in seconds)
CONNECT_TIMEOUT=20

## timeout (min. 60 seconds - be nice to servers!)
DEFAULT_RELOAD=90

## RELOAD_NOTIFICATION="yes|no"
RELOAD_NOTIFICATION="yes"

## do you want to log your tweets (updates)? "yes|no"
T_LOG="yes"

## BASHTC_CHARSET=utf-8|iso-8859-15
BASHTC_CHARSET=utf-8

## reply notification with "ogg123 -q|mpg123 -q"
S_PLAY="mpg123 -q"

## path to soundfile (@reply notification)
SOUNDFILE=

## username highlighting colour
## 0=black 1=red 2=green 3=yellow 4=blue 5=magenta 6=cyan 7=white
#HIGH_COLOUR=$(tput setab 1)    #red/reverse
HIGH_COLOUR=$(tput setaf 2)    #green/normal

## sometimes you need a graphical browser
G_BROWSER=/usr/bin/iceweasel

## temporary files and log
FILTER=$HOME/.bashtc/filter
HTML=$HOME/.bashtc/html.htm
TEMP=$HOME/.bashtc/temp
OUT=$HOME/.bashtc/out
CREATED=$HOME/.bashtc/created
CREATED_=$HOME/.bashtc/created_
CREATED_AT=$HOME/.bashtc/created_at
TEXT=$HOME/.bashtc/text
TWEET=$HOME/.bashtc/tweet
NAMES=$HOME/.bashtc/names
URLS=$HOME/.bashtc/urls
STATUSLINE=$HOME/.bashtc/statusline
TWEET_LOG=$HOME/.bashtc/tweetlog


## ================================================================================================
## no changes in this section
## ================================================================================================
T_USER=`grep twitter.com ~/.netrc | awk '{printf $4}'`
PASS=`grep twitter.com ~/.netrc | awk '{printf $6}'`
CONNECTION=
COLOUR_END="\033[0m"
NORM_COLOUR=$(tput sgr0)
RELOAD_FLAG="0"
FILTER_FLAG="off"
URL_HOME="http://twitter.com/home"
URL_FR_API="http://twitter.com/statuses/friends_timeline.xml?page="
URL_DMESS="http://twitter.com/direct_messages.xml?page="
URL_PROFILE="m.twitter.com/$T_USER"
URL_REPLIES="http://twitter.com/statuses/replies.xml?page="
URL_STATUS="http://status.twitter.com"
URL_UPDATE="http://twitter.com/statuses/update.xml"


## ================================================================================================
## allow only one instance of bashtc
## ================================================================================================
OLD=`pgrep -o bashtc`
ALL=`pgrep bashtc`
if [ "$OLD" != "$ALL" ]; then
  kill $OLD
fi


## ================================================================================================
function blank_lines ()
## ================================================================================================
{
if [ "$BLANK_LINES" = "on" ]; then
  BLANK_LINES="off"
else
  BLANK_LINES="on"
fi
}


## ================================================================================================
function build_statusline ()
## ================================================================================================
{
>$STATUSLINE

COLS=`tput cols`

echo -n "twitter.com " > $STATUSLINE
TIME=`date -R | awk '{printf $5}'`
echo -n "($NR) $TIME" >> $STATUSLINE

echo -n " | Snd: $SOUND | Fltr: $FILTER_FLAG | [n]ewer | [o]lder | [U]pdt | \
[P]rfl | [R]pls | [D]M | [H]elp | [Q]uit" >> $STATUSLINE

sed -n -i 'H;${x;s/\n/ /g;p;}' $STATUSLINE

LEN=`wc -c "$STATUSLINE" | awk '{printf $1}'`
LEN=`expr $LEN + 1`

tput rev
cat "$STATUSLINE"; for i in `seq $LEN 1 $COLS`; do echo -n " "; done
echo -en "\r"
tput sgr0
}


## ================================================================================================
function convert_xml ()
## ================================================================================================
{
# extract name
sed -e "/<${PRE}screen_name>/!d" \
    -e 's/^\ *//' \
    -e "s/<\/\{0,1\}${PRE}screen_name>//g" $TEMP > $NAMES

ADJUST=`cat "$NAMES" | wc -L`

# extract text
sed -e '/<text>/!d' \
    -e 's/<\/\{0,1\}text>/<br>/g' $TEMP > $HTML

# convert text
lynx -display_charset=$BASHTC_CHARSET -width 200 -nolist -dump $HTML > $TEXT

# extract time string
sed -n '/<status>/{n;p;}' $TEMP > $CREATED 
sed -i 's/<\/\{0,1\}created_at>//g' $CREATED

# convert time string
date -f $CREATED +%s > $CREATED_

>$CREATED_AT

# calculate elapsed time
for Q in $(cut -d: -f1 $CREATED_); do

  TWEET_TIME="$Q"
  NOW=`date +%s`
  DIFF=$[${NOW}-${TWEET_TIME}]

  if [ $DIFF -lt 60 ]; then
    RESULT=$DIFF"s"
  fi

  if [ $DIFF -gt 60 ]; then
    ((RES=$DIFF/60)) && RESULT=$RES"m"
  fi

  if [ $DIFF -gt 3600 ]; then
    ((RES=$DIFF/3600)) && RESULT=$RES"h"
  fi

  if [ $DIFF -gt 86400 ]; then
    ((RES=$DIFF/86400)) && RESULT=$RES"d"
  fi

  echo $RESULT >> $CREATED_AT

done

# assemble output
paste $NAMES $TEXT -d " " $CREATED_AT > $OUT

# <->-correction & format output
sed -e 's/&lt;/</g' \
    -e 's/&gt;/>/g' \
    -e 's/\ \ \ //' \
    -e 's/\ /:\ /' $OUT > $TEMP
}


## ================================================================================================
function display_direct_messages ()
## ================================================================================================
{
echo -n "fetching direct messages..."
curl --netrc -s $URL_DMESS$NR > $TEMP

PRE="sender_"
convert_xml
cat $TEMP > $OUT

clear
display_tweets

COLS=`tput cols`
echo -n " twitter.com ($NR) DIRECT MESSAGES | [n]ewer | [o]lder | [l]eave" > $STATUSLINE
LEN=`wc -c "$STATUSLINE" | awk '{printf $1}'`
LEN=`expr $LEN + 1`

tput rev
cat $STATUSLINE; for i in `seq $LEN 1 $COLS`; do echo -n " "; done
echo -en "\r"
tput sgr0

LOOP=0
while [ $LOOP == 0 ]
do

  read -s -n 1 KEY

  case $KEY in

    n)  NR=`expr $NR - 1`                                             # newer/next page
        [ $NR -gt 0 ] && display_direct_messages || NR=1
        ;;

    o)  NR=`expr $NR + 1`                                             # older/previous page
        display_direct_messages
        ;;

  l|Q)  NR="1"                                                        # leave function
        LOOP=1
        ;;

  esac

done
}


## ================================================================================================
function display_profile ()
## ================================================================================================
{
echo -n "fetching profile..."
elinks http://${T_USER}:${PASS}@${URL_PROFILE}
}


## ================================================================================================
function display_replies ()
## ================================================================================================
{
echo -n "fetching @replies..."
curl --netrc -s $URL_REPLIES$NR > $TEMP

convert_xml
cat $TEMP > $OUT

clear

display_tweets

COLS=`tput cols`
echo -n " twitter.com ($NR) REPLIES | [n]ewer | [o]lder | [l]eave" > $STATUSLINE
LEN=`wc -c "$STATUSLINE" | awk '{printf $1}'`
LEN=`expr $LEN + 1`

tput rev
cat $STATUSLINE; for i in `seq $LEN 1 $COLS`; do echo -n " "; done
echo -en "\r"
tput sgr0

LOOP=0
while [ $LOOP == 0 ]
do

  read -s -n 1 KEY

  case $KEY in

    n)  NR=`expr $NR - 1`                          # newer/next page
        [ $NR -gt 0 ] && display_replies || NR=1
        ;;

    o)  NR=`expr $NR + 1`                          # older/previous page
        display_replies
        ;;

  l|Q)  NR="1"                                     # leave function
        LOOP=1
        ;;

  esac

done
}


## ================================================================================================
function display_tweets ()
## ================================================================================================
{
if [ "$BLANK_LINES" = "on" ]; then
  sed -e :a -e "s/^.\{1,${ADJUST}\}\:/ &/;ta" \
      -e "s/${T_USER}/${HIGH_COLOUR}${T_USER}${NORM_COLOUR}/g" \
      -e 'G;' -e 's/\ //' $OUT | fold -s -w $TEXT_WIDTH
else
  sed -e :a -e "s/^.\{1,${ADJUST}\}\:/ &/;ta" \
      -e "s/${T_USER}/${HIGH_COLOUR}${T_USER}${NORM_COLOUR}/g" \
      -e 's/\ //' $OUT | fold -s -w $TEXT_WIDTH
fi
}


## ================================================================================================
function filter ()
## ================================================================================================
{
if [ "$FILTER_FLAG" != "off" ]; then
    grep -v -f "$FILTER" $TEMP > $OUT
  else
    cat $TEMP > $OUT
fi
}


## ================================================================================================
function filter_flag ()
## ================================================================================================
{
if [ "$FILTER_FLAG" != "off" ]; then
  FILTER_FLAG="off"
  else
  if [ -r $FILTER ]; then
    FILTER_FLAG=`wc -l $FILTER | awk '{printf $1}'`
  else
    echo "$FILTER file doesn't exist or is empty! Please edit!" && exit 1
  fi
fi
}


## ================================================================================================
function help ()
## ================================================================================================
{
clear
echo -e "
bashtc help screen\n"

grep '^## Version' $0 | awk '{printf $2" "$3}'

echo -e "\n
Key  Function

  B  Toggle blank lines between tweets
  D  Display direct messages
  E  Edit filter
  F  Toggle filter
  H  This help page
  I  Use http://is.gd to shorten urls
  L  Open logfile with favourite editor
  M  Mute/unmute sound notification
  N  Edit bashtc script with favourite editor
  n  newer tweets
  o  older tweets
  P  Display user profile
  Q  Quit bashtc
  R  Display replies
  S  Go to the twitter status website
  T  Go to twitter.com
  U  Update (send a tweet to twitter)
  V  View URLS with (graphical) browser
  W  Set text width

Press any key to continue"
read -s -n 1 ANY_KEY
}


## ================================================================================================
function sound ()
## ================================================================================================
{
if [ "$SOUND" = "on" ]; then
  SOUND="off"
else
  SOUND="on"
fi
}


## ================================================================================================
function options ()
## ================================================================================================
{
echo "
bashtc - a twitter client for the command line

Usage: $0 [OPTIONS]
Options are:

-b          Blank line between tweets
-f          Filter keyword(s)
-h          Display this help message
-s          Play a sound, when a new tweet was received
-v          Display version
-w          Set text width

Make the script executable with 'chmod 0700 bashtc'!
"
}


## ================================================================================================
function tweet ()
## ================================================================================================
{
$EDITOR $TWEET

clear
tail $TWEET
echo -e "\nsend this tweet? [y/n]"
read -s -n 1 INPUT

case $INPUT in

  y|Y) UPDATE=`cat $TWEET`
       curl --netrc --connect-timeout $CONNECT_TIMEOUT --data-urlencode \
       status="$UPDATE" -d source="bashtc" -s ${URL_UPDATE}

       ## write tweet to logfile
       if [ $T_LOG = "yes" ]; then
         cat $TWEET >> $TWEET_LOG
         date +%c >> $TWEET_LOG
       fi
       ;;

esac

>$TWEET
clear
}


## ================================================================================================
function view_urls ()
## ================================================================================================
{
clear
sed -n '/http/p' $TEXT > $TEMP1
sed 's/\ /\n/g' $TEMP1 > $TEXT
cat $TEXT > $TEMP1
filter
sed -n '/http/p' $TEXT > $URLS
$G_BROWSER `cat $URLS` &
}


## ================================================================================================
## switches
## ================================================================================================
BLANK_LINES="off"
RELOAD="$DEFAULT_RELOAD"
SOUND="off"

set -- `getopt bfhsvw: "$@"`
[ $# -lt 1 ] && exit 1

while [ $# -gt 0 ]
do

    case "$1" in

        -b)     blank_lines
                ;;

        -f)     filter_flag
                ;;

        -h)     options
                exit 0
                ;;

        -s)     sound
                ;;

        -v)     grep '^## Version' $0 | awk '{printf $2" "$3}'
                echo -e "\n"
                exit 0
                ;;

        -w)     TEXT_WIDTH="$2"
                [ "$TEXT_WIDTH" -lt 60 ] && TEXT_WIDTH=60
                shift
                ;;

        --)     shift
                break
                ;;

        -*)     echo >&2 "usage: $0 [-b] [-e] [-f] [-h] [-s] [-w WIDTH] [-v]"
                exit 1
                ;;

        *)      break
                ;;

    esac
    shift

done


## ================================================================================================
## create directory
## ================================================================================================
[ -d "~/.bashtc" ] || mkdir -p ~/.bashtc


## ================================================================================================
## check username and password
## ================================================================================================
[ -z "$T_USER" -o -z "$PASS" ] && echo -e "Please edit ~/.netrc file!\nExit." && exit 1


## ================================================================================================
## display tweets
## ================================================================================================
NR=1

while true
do

  if [ $RELOAD_FLAG = "0" ]; then

    if [ $RELOAD_NOTIFICATION = "yes" ]; then
      echo -n "RELOADING...    "
    fi

    CONNECTION=
    curl --netrc -s --connect-timeout $CONNECT_TIMEOUT $URL_FR_API$NR > $TEMP || CONNECTION=1

    PRE=""

    convert_xml

    filter

  fi

  clear

  display_tweets

  build_statusline

  RELOAD_FLAG="0"


  ## ================================================================================================
  ## @replies
  ## ================================================================================================

  NEW_REPLY=`grep "@$T_USER" $TEXT`

  if [ "$SOUND" = "on" ]; then
    if [ "$NEW_REPLY" != "" ]; then
      if [ "$NEW_REPLY" != "$LAST_REPLY" ]; then
        $S_PLAY -q $SOUNDFILE
      fi
    fi
  fi

  LAST_REPLY="$NEW_REPLY"


  ## ================================================================================================
  ## is twitter down?
  ## ================================================================================================
  if [ "$CONNECTION" = "1" ];
  then
    clear
    echo -e "\n\n\n   Twitter is not available!"
    CONNECTION=
  fi


  ## ================================================================================================
  ## menu
  ## ================================================================================================
  read -s -n 1 -t $RELOAD INPUT

    case $INPUT in


        B) blank_lines                                  # toggle blank lines
           RELOAD_FLAG="1"
           ;;

        D) NR="1"                                       # display direct messages
           display_direct_messages
           RELOAD_FLAG="0"
           ;;

        E) $EDITOR $FILTER                              # edit filter file
           exit 0
           ;;

        F) filter_flag                                  # toggle filter
           RELOAD_FLAG="0"
           ;;

        H) help                                         # display help page
           RELOAD_FLAG="1"
           ;;

        I) $BROWSER http://is.gd                        # shorten urls with is.gd
           RELOAD_FLAG="0"
           ;;

        L) $EDITOR $TWEET_LOG                           # open logfile
           RELOAD_FLAG="0"
           ;;

        M) sound                                        # toggle audio notification
           RELOAD_FLAG="1"
           ;;

        N) $EDITOR $0                                   # edit bashtc
           exit 0
           ;;

        n) if [ $NR -gt 1 ]; then                       # newer/next page
             NR=`expr $NR - 1`
             RELOAD_FLAG="0"
             continue
           fi
           RELOAD_FLAG="1"
           ;;

        o) NR=`expr $NR + 1`                            # older/previous page
           RELOAD_FLAG="0"
           ;;

        P) display_profile                              # display user profile
           RELOAD_FLAG="1"
           ;;

        Q) clear                                        # clean up & quit
           exit 0
           ;;

        R) NR="1"                                       # display replies
           display_replies
           RELOAD_FLAG="0"
           ;;

        S) $BROWSER $URL_STATUS                         # twitter status website
           RELOAD_FLAG="0"
           ;;

        T) $BROWSER $URL_HOME                           # go to twitter.com
           RELOAD_FLAG="0"
           ;;

        U) tweet                                        # send tweet (update)
           RELOAD_FLAG="0"
           ;;

        V) view_urls                                    # view links with (graphical) browser
           RELOAD_FLAG="0"
           ;;

        W) clear                                        # change text width
           echo "Enter text width:"
           read -t 30 TEXT_WIDTH
           [ "$TEXT_WIDTH" -lt 60 ] && TEXT_WIDTH=60
           RELOAD_FLAG="1"
           ;;

        *) NR="1"                                       # reload with any other key
           RELOAD_FLAG="0"
           ;;

    esac

  INPUT=""

done
